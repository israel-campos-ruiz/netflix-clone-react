{"version":3,"sources":["hooks/useGet.js","helpers/request.js","components/layout/RowItem.jsx","components/shared/Loader.jsx","components/layout/Banner.jsx","components/shared/Navbar.jsx","pages/Layout.jsx","Netflix.jsx","index.js"],"names":["useGet","url","isMounted","useRef","useState","data","loading","error","state","setState","useEffect","current","getData","a","axios","get","response","API_KEY","URL_POSTER","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentariesMovies","RowItem","React","memo","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","results","className","style","marginTop","map","movie","onClick","movieTrailer","name","then","console","log","urlParams","URLSearchParams","URL","search","catch","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playersVars","autoPlay","Loader","objectFit","color","Banner","str","n","setMovie","request","setInterval","Math","floor","random","length","fetchData","backgroundSize","backgroundImage","backgroundPosition","transitionTimingFunction","transition","original_name","overview","substr","Navbar","show","setShow","window","addEventListener","scrollY","removeEventListener","Layout","Netflix","_","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a72e70ba.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useGet = (url) => {\n  const isMounted = useRef(true);\n  const [state, setState] = useState({\n    data: null,\n    loading: true,\n    error: null,\n  });\n  useEffect(()=> {\n    return () => {\n        isMounted.current = false;\n    }\n}, []);\n  useEffect(() => {\n    const getData = async () => {\n      try {\n          setState({data:null, loading:true, error:null});\n          const response = await axios.get(url);\n          const { data } = response;\n          setState({data, loading:false, error:null});\n      } catch (error) {\n          setState({data:null, loading:false, error:'error al cargar la data'}) \n      }\n    };\n    if(isMounted.current){\n        getData();\n    }\n\n     \n   }, [url]);\n\n  return state;\n};\n\nexport default useGet;\n","const API_KEY = 'f5db8a9255d67e2282b48f43ea95054a';\nexport const URL_POSTER = \"https://image.tmdb.org/t/p/original/\";\nexport const requests = {\n    fetchTrending: `https://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals:`https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated:`https://api.themoviedb.org/3/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies:`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies:`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies:`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies:`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentariesMovies:`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}","import React, { useEffect, useState } from \"react\";\nimport useGet from \"../../hooks/useGet\";\nimport { URL_POSTER } from \"../../helpers/request\";\nimport '../../styles/components/layout/Row.css'\nimport YouTube from \"react-youtube\";\nimport movieTrailer  from 'movie-trailer'\nconst RowItem = React.memo(({ title, fetchUrl, isLargeRow }) => {\n  const opts = {\n    height:\"390\",\n    width:\"100%\",\n    playersVars:{\n      autoPlay:1\n    }\n  }\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState('')\n  const { data } = useGet(fetchUrl);\n  useEffect(() => {\n    setMovies(data && data.results);\n  }, [movies, data]);\n\n  const handleClick = (movie) => {\n    if(trailerUrl){\n      setTrailerUrl(\"\")\n    }else{\n      movieTrailer(movie?.name || \"\")\n      .then(url => {\n        console.log(url);\n        const urlParams = new URLSearchParams(new URL(url).search)\n        setTrailerUrl( urlParams.get('v'))\n      })\n      .catch(error => console.log(error));\n    }\n  }\n  return (\n    <div className=\"row\">\n      <h2 style ={{marginTop:'10px'}}>{title}</h2>\n      <div className=\"row__posters\">\n        {movies &&\n          movies.map((movie) => (\n            <img\n              onClick ={()=>handleClick(movie)}\n              key={movie.id}\n              className={`row__posters__images ${isLargeRow && \"row__posterLarge\"}`}\n              src={`${URL_POSTER}${ isLargeRow ? movie.poster_path : movie.backdrop_path}`}\n              alt={movie.poster_path}\n            />\n          ))}\n      </div>\n      { trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n});\nexport default RowItem;\n","import React from \"react\";\nimport \"../../styles/shared/Loader.css\";\nconst Loader = () => (\n  <div className=\"lds-dual-ring\">\n    <img\n      style={{width:\"80px\", objectFit:\"contain\"}}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/245px-Netflix_2015_logo.svg.png\"\n      alt=\"netflix logo\"\n    />\n    <p style={{ color: \"#E50914\" }}></p>\n  </div>\n);\nexport default Loader;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { requests, URL_POSTER } from \"../../helpers/request\";\nimport '../../styles/components/layout/Banner.css'\nconst Banner = () => {\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setInterval(() => {\n        setMovie( request.data.results[Math.floor(Math.random() * request.data.results.length - 1 )]                            \n        );\n      }, 8000);      \n    };\n    fetchData();\n    return () => {\n       \n    }\n   }, []);\n   function truncate(str,n){\n       return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\n   }\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(${URL_POSTER}${movie?.backdrop_path})`,\n        backgroundPosition: \"center center\",\n        transitionTimingFunction: \"ease-in-out\",\n        transition: \"all 0.8s\",\n      }}\n    >\n      <div className=\"banner__contents\">\n        <h1 className=\"banner__title\">{movie?.title || movie?.name || movie?.original_name}</h1>\n        <div className =\"banner__buttons\">\n            <button className=\"banner__button\">Play</button>\n            <button className=\"banner__button\">My list</button>\n        </div>\n        {/* description */}\n        <h1 className=\"banner__description\">\n            {truncate(movie?.overview, 200)}\n        </h1>\n\n\n      </div>\n      <div className=\"banner--fadeBottom\"></div>\n    </header>\n  );\n};\n\nexport default Banner;\n","import React, { useEffect, useState } from \"react\";\nimport \"../../styles/shared/Navbar.css\";\n\nconst Navbar = () => {\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      window.scrollY > 100 ? setShow(true) : setShow(false);\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    };\n  }, []);\n  return (\n    <div className={`nav ${show && \"nav__black\"}`}>\n      <img\n        className=\"nav__logo\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/245px-Netflix_2015_logo.svg.png\"\n        alt=\"netflix logo\"\n      />\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport useGet from \"../hooks/useGet\";\nimport RowItem from \"../components/layout/RowItem\";\nimport Loader from \"../components/shared/Loader\";\nimport { requests } from \"../helpers/request\";\nimport Banner from \"../components/layout/Banner\";\nimport '../styles/App.css'\nimport Navbar from \"../components/shared/Navbar\";\n\nconst Layout = () => {\n  const { data, loading } = useGet(requests.fetchTrending);\n  return (\n    <div className=\"app\">\n      {loading && <Loader />}\n       {/* navbar */}\n       <Navbar />\n       <Banner/>\n      {data &&(\n        <div className=\"app\">\n          <RowItem isLargeRow title={\"NETFLIX ORIGINALS\"} fetchUrl={requests.fetchNetflixOriginals}/>\n          <RowItem isLargeRow title={\"Trending Now\"} fetchUrl={requests.fetchTrending}/>\n          <RowItem isLargeRow title={\"Top Rated\"} fetchUrl={requests.fetchTopRated}/>\n          <RowItem isLargeRow title={\"Action Movies\"} fetchUrl={requests.fetchActionMovies}/>\n          <RowItem isLargeRow title={\"Comedy Movies\"} fetchUrl={requests.fetchComedyMovies}/>\n          <RowItem isLargeRow title={\"Horror Movies\"} fetchUrl={requests.fetchHorrorMovies}/>\n          <RowItem isLargeRow title={\"Romance Movies\"} fetchUrl={requests.fetchRomanceMovies}/>\n          <RowItem isLargeRow title={\"Documentaries\"} fetchUrl={requests.fetchDocumentariesMovies}/>\n    \n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport Layout from \"./pages/Layout\";\nconst Netflix = _ => <Layout />;\nexport default Netflix;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Netflix from './Netflix';\nimport './index.css'\nReactDOM.render(\n    <Netflix />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}